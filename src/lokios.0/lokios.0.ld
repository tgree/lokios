EXTERN(_start)
SECTIONS
{
    /* PXE loads us into memory at 0x7c00, so link ourselves at that base
     * address. */
    . = 0x7c00;
    .bootsector_text :
    {
        *bootsector.a:entry.o(.text)
        *bootsector.a:*(*text)
    }
    .bootsector_data :
    {
        *timestamp.o(.data)
        *bootsector.a:*(.data)
    }
    ASSERT(. <= 0x7DB4, "boot sector crashed into disk ID")

    /* Include a valid MBR signature for booting off disk. */
    . = 0x7dfe;
    .mbr_sig :
    {
        BYTE(0x55)
        BYTE(0xAA)
    }

    /* That's the end of the boot sector.  If we PXE-booted the rest of the
     * code is already in memory.  If we MBR-booted then the bootsector has
     * gone and loaded the rest of the code into memory.  In either case, they
     * will then branch into code at or above 0x7E00. */
    . = 0x7e00;
    .text :
    {
        *(.text)
    }
    .data :
    {
        *(.data)
    } = 0xCC

    /* Provide a global descriptor table to use for the swtich to 16-bit
     * unreal mode. */
    . = ALIGN(64);
    .gdt_unreal_16 :
    {
        _gdt_unreal_16 = .;
        QUAD(0x0000000000000000);
        QUAD(0x00CF92000000FFFF);

        _gdt_unreal_16_desc = .;
        SHORT(_gdt_unreal_16_desc - _gdt_unreal_16 - 1);
        LONG(_gdt_unreal_16);
    }

    /* Provide a global descriptor table to use for the switch to 64-bit
     * mode. */
    . = ALIGN(64);
    .gdt_64 :
    {
        _gdt_64 = .;
        QUAD(0x0000000000000000);
        QUAD(0x00209A0000000000);   /* Code descriptor */
        QUAD(0x0000920000000000);   /* Data descriptor */

        _gdt_64_desc = .;
        SHORT(_gdt_64_desc - _gdt_64 - 1);
        LONG(_gdt_64);
    }

    /* Provide an empty interrupt descriptor table.  TODO: Figure out what to
     * really put here. */
    . = ALIGN(64);
    .idt_64 :
    {
        _idt_64 = .;
        BYTE(0);
        _idt_64_desc = .;
        SHORT(_idt_64_desc - _idt_64 - 1);
        LONG(_idt_64);
    }

    /* Provide at least 4096 bytes to hold the E820 map.  This should be more
     * than enough (I hope).  Before we've loaded the E820 map, this region of
     * memory can also be used for a disk IO bounce buffer. */
    .e820_map :
    {
        _pre_e820_bounce_buffer = .;
        _e820_end = .;
        SHORT(0xFFFF);
        _e820_map = .;
        . += 4096;
        . = ALIGN(4096);
    } = 0xDD
    _e820_last_max_entry = . - 24;

    /* Provide a page table that identity-maps the first 64M of memory via 4K
     * and 2M pages. */
    .page_table :
    {
        _page_table = .;
        ASSERT(_page_table == ALIGN(4096), "page table misaligned");
        QUAD((_page_table + 0x00001000) | 3);
        . = ALIGN(4096);
        QUAD((_page_table + 0x00002000) | 3);
        . = ALIGN(4096);
        QUAD((_page_table + 0x00003000) | 3);
        QUAD(0x0000000000200083);
        QUAD(0x0000000000400083);
        QUAD(0x0000000000600083);
        _last_2m_entry = . - 8;
        . = ALIGN(4096);
        QUAD(0x0000000000000001);
        QUAD(0x0000000000001001);
        QUAD(0x0000000000002001);
        QUAD(0x0000000000003001);
        QUAD(0x0000000000004001);
        QUAD(0x0000000000005001);
        QUAD(0x0000000000006001);
        QUAD(0x0000000000007001);
        QUAD(0x0000000000008001);
        QUAD(0x0000000000009001);
        QUAD(0x000000000000A001);
        QUAD(0x000000000000B001);
        QUAD(0x000000000000C001);
        QUAD(0x000000000000D001);
        QUAD(0x000000000000E001);
        QUAD(0x000000000000F001);
        QUAD(0x0000000000010001);
        QUAD(0x0000000000011001);
        QUAD(0x0000000000012001);
        QUAD(0x0000000000013001);
        QUAD(0x0000000000014001);
        QUAD(0x0000000000015001);
        QUAD(0x0000000000016001);
        QUAD(0x0000000000017001);
        QUAD(0x0000000000018001);
        QUAD(0x0000000000019001);
        QUAD(0x000000000001A001);
        QUAD(0x000000000001B001);
        QUAD(0x000000000001C001);
        QUAD(0x000000000001D001);
        QUAD(0x000000000001E001);
        QUAD(0x000000000001F001);
        QUAD(0x0000000000020001);
        QUAD(0x0000000000021001);
        QUAD(0x0000000000022001);
        QUAD(0x0000000000023001);
        QUAD(0x0000000000024001);
        QUAD(0x0000000000025001);
        QUAD(0x0000000000026001);
        QUAD(0x0000000000027001);
        QUAD(0x0000000000028001);
        QUAD(0x0000000000029001);
        QUAD(0x000000000002A001);
        QUAD(0x000000000002B001);
        QUAD(0x000000000002C001);
        QUAD(0x000000000002D001);
        QUAD(0x000000000002E001);
        QUAD(0x000000000002F001);
        QUAD(0x0000000000030001);
        QUAD(0x0000000000031001);
        QUAD(0x0000000000032001);
        QUAD(0x0000000000033001);
        QUAD(0x0000000000034001);
        QUAD(0x0000000000035001);
        QUAD(0x0000000000036001);
        QUAD(0x0000000000037001);
        QUAD(0x0000000000038001);
        QUAD(0x0000000000039001);
        QUAD(0x000000000003A001);
        QUAD(0x000000000003B001);
        QUAD(0x000000000003C001);
        QUAD(0x000000000003D001);
        QUAD(0x000000000003E001);
        QUAD(0x000000000003F001);
        QUAD(0x0000000000040001);
        QUAD(0x0000000000041001);
        QUAD(0x0000000000042001);
        QUAD(0x0000000000043001);
        QUAD(0x0000000000044001);
        QUAD(0x0000000000045001);
        QUAD(0x0000000000046001);
        QUAD(0x0000000000047001);
        QUAD(0x0000000000048001);
        QUAD(0x0000000000049001);
        QUAD(0x000000000004A001);
        QUAD(0x000000000004B001);
        QUAD(0x000000000004C001);
        QUAD(0x000000000004D001);
        QUAD(0x000000000004E001);
        QUAD(0x000000000004F001);
        QUAD(0x0000000000050001);
        QUAD(0x0000000000051001);
        QUAD(0x0000000000052001);
        QUAD(0x0000000000053001);
        QUAD(0x0000000000054001);
        QUAD(0x0000000000055001);
        QUAD(0x0000000000056001);
        QUAD(0x0000000000057001);
        QUAD(0x0000000000058001);
        QUAD(0x0000000000059001);
        QUAD(0x000000000005A001);
        QUAD(0x000000000005B001);
        QUAD(0x000000000005C001);
        QUAD(0x000000000005D001);
        QUAD(0x000000000005E001);
        QUAD(0x000000000005F001);
        QUAD(0x0000000000060001);
        QUAD(0x0000000000061001);
        QUAD(0x0000000000062001);
        QUAD(0x0000000000063001);
        QUAD(0x0000000000064001);
        QUAD(0x0000000000065001);
        QUAD(0x0000000000066001);
        QUAD(0x0000000000067001);
        QUAD(0x0000000000068001);
        QUAD(0x0000000000069001);
        QUAD(0x000000000006A001);
        QUAD(0x000000000006B001);
        QUAD(0x000000000006C001);
        QUAD(0x000000000006D001);
        QUAD(0x000000000006E001);
        QUAD(0x000000000006F001);
        QUAD(0x0000000000070001);
        QUAD(0x0000000000071001);
        QUAD(0x0000000000072001);
        QUAD(0x0000000000073001);
        QUAD(0x0000000000074001);
        QUAD(0x0000000000075001);
        QUAD(0x0000000000076001);
        QUAD(0x0000000000077001);
        QUAD(0x0000000000078001);
        QUAD(0x0000000000079001);
        QUAD(0x000000000007A001);
        QUAD(0x000000000007B001);
        QUAD(0x000000000007C001);
        QUAD(0x000000000007D001);
        QUAD(0x000000000007E001);
        QUAD(0x000000000007F001);
        QUAD(0x0000000000080001);
        QUAD(0x0000000000081001);
        QUAD(0x0000000000082001);
        QUAD(0x0000000000083001);
        QUAD(0x0000000000084001);
        QUAD(0x0000000000085001);
        QUAD(0x0000000000086001);
        QUAD(0x0000000000087001);
        QUAD(0x0000000000088001);
        QUAD(0x0000000000089001);
        QUAD(0x000000000008A001);
        QUAD(0x000000000008B001);
        QUAD(0x000000000008C001);
        QUAD(0x000000000008D001);
        QUAD(0x000000000008E001);
        QUAD(0x000000000008F001);
        QUAD(0x0000000000090001);
        QUAD(0x0000000000091001);
        QUAD(0x0000000000092001);
        QUAD(0x0000000000093001);
        QUAD(0x0000000000094001);
        QUAD(0x0000000000095001);
        QUAD(0x0000000000096001);
        QUAD(0x0000000000097001);
        QUAD(0x0000000000098001);
        QUAD(0x0000000000099001);
        QUAD(0x000000000009A001);
        QUAD(0x000000000009B001);
        QUAD(0x000000000009C001);
        QUAD(0x000000000009D001);
        QUAD(0x000000000009E001);
        QUAD(0x000000000009F001);
        QUAD(0x00000000000A0001);
        QUAD(0x00000000000A1001);
        QUAD(0x00000000000A2001);
        QUAD(0x00000000000A3001);
        QUAD(0x00000000000A4001);
        QUAD(0x00000000000A5001);
        QUAD(0x00000000000A6001);
        QUAD(0x00000000000A7001);
        QUAD(0x00000000000A8001);
        QUAD(0x00000000000A9001);
        QUAD(0x00000000000AA001);
        QUAD(0x00000000000AB001);
        QUAD(0x00000000000AC001);
        QUAD(0x00000000000AD001);
        QUAD(0x00000000000AE001);
        QUAD(0x00000000000AF001);
        QUAD(0x00000000000B0001);
        QUAD(0x00000000000B1001);
        QUAD(0x00000000000B2001);
        QUAD(0x00000000000B3001);
        QUAD(0x00000000000B4001);
        QUAD(0x00000000000B5001);
        QUAD(0x00000000000B6001);
        QUAD(0x00000000000B7001);
        QUAD(0x00000000000B8007); /* VRAM */
        QUAD(0x00000000000B9007); /* VRAM */
        QUAD(0x00000000000BA007); /* VRAM */
        QUAD(0x00000000000BB007); /* VRAM */
        QUAD(0x00000000000BC007); /* VRAM */
        QUAD(0x00000000000BD007); /* VRAM */
        QUAD(0x00000000000BE007); /* VRAM */
        QUAD(0x00000000000BF007); /* VRAM */
        QUAD(0x00000000000C0001);
        QUAD(0x00000000000C1001);
        QUAD(0x00000000000C2001);
        QUAD(0x00000000000C3001);
        QUAD(0x00000000000C4001);
        QUAD(0x00000000000C5001);
        QUAD(0x00000000000C6001);
        QUAD(0x00000000000C7001);
        QUAD(0x00000000000C8001);
        QUAD(0x00000000000C9001);
        QUAD(0x00000000000CA001);
        QUAD(0x00000000000CB001);
        QUAD(0x00000000000CC001);
        QUAD(0x00000000000CD001);
        QUAD(0x00000000000CE001);
        QUAD(0x00000000000CF001);
        QUAD(0x00000000000D0001);
        QUAD(0x00000000000D1001);
        QUAD(0x00000000000D2001);
        QUAD(0x00000000000D3001);
        QUAD(0x00000000000D4001);
        QUAD(0x00000000000D5001);
        QUAD(0x00000000000D6001);
        QUAD(0x00000000000D7001);
        QUAD(0x00000000000D8001);
        QUAD(0x00000000000D9001);
        QUAD(0x00000000000DA001);
        QUAD(0x00000000000DB001);
        QUAD(0x00000000000DC001);
        QUAD(0x00000000000DD001);
        QUAD(0x00000000000DE001);
        QUAD(0x00000000000DF001);
        QUAD(0x00000000000E0001);
        QUAD(0x00000000000E1001);
        QUAD(0x00000000000E2001);
        QUAD(0x00000000000E3001);
        QUAD(0x00000000000E4001);
        QUAD(0x00000000000E5001);
        QUAD(0x00000000000E6001);
        QUAD(0x00000000000E7001);
        QUAD(0x00000000000E8001);
        QUAD(0x00000000000E9001);
        QUAD(0x00000000000EA001);
        QUAD(0x00000000000EB001);
        QUAD(0x00000000000EC001);
        QUAD(0x00000000000ED001);
        QUAD(0x00000000000EE001);
        QUAD(0x00000000000EF001);
        QUAD(0x00000000000F0001);
        QUAD(0x00000000000F1001);
        QUAD(0x00000000000F2001);
        QUAD(0x00000000000F3001);
        QUAD(0x00000000000F4001);
        QUAD(0x00000000000F5001);
        QUAD(0x00000000000F6001);
        QUAD(0x00000000000F7001);
        QUAD(0x00000000000F8001);
        QUAD(0x00000000000F9001);
        QUAD(0x00000000000FA001);
        QUAD(0x00000000000FB001);
        QUAD(0x00000000000FC001);
        QUAD(0x00000000000FD001);
        QUAD(0x00000000000FE001);
        QUAD(0x00000000000FF001);
        QUAD(0x0000000000100001);
        QUAD(0x0000000000101001);
        QUAD(0x0000000000102001);
        QUAD(0x0000000000103001);
        QUAD(0x0000000000104001);
        QUAD(0x0000000000105001);
        QUAD(0x0000000000106001);
        QUAD(0x0000000000107001);
        QUAD(0x0000000000108001);
        QUAD(0x0000000000109001);
        QUAD(0x000000000010A001);
        QUAD(0x000000000010B001);
        QUAD(0x000000000010C001);
        QUAD(0x000000000010D001);
        QUAD(0x000000000010E001);
        QUAD(0x000000000010F001);
        QUAD(0x0000000000110001);
        QUAD(0x0000000000111001);
        QUAD(0x0000000000112001);
        QUAD(0x0000000000113001);
        QUAD(0x0000000000114001);
        QUAD(0x0000000000115001);
        QUAD(0x0000000000116001);
        QUAD(0x0000000000117001);
        QUAD(0x0000000000118001);
        QUAD(0x0000000000119001);
        QUAD(0x000000000011A001);
        QUAD(0x000000000011B001);
        QUAD(0x000000000011C001);
        QUAD(0x000000000011D001);
        QUAD(0x000000000011E001);
        QUAD(0x000000000011F001);
        QUAD(0x0000000000120001);
        QUAD(0x0000000000121001);
        QUAD(0x0000000000122001);
        QUAD(0x0000000000123001);
        QUAD(0x0000000000124001);
        QUAD(0x0000000000125001);
        QUAD(0x0000000000126001);
        QUAD(0x0000000000127001);
        QUAD(0x0000000000128001);
        QUAD(0x0000000000129001);
        QUAD(0x000000000012A001);
        QUAD(0x000000000012B001);
        QUAD(0x000000000012C001);
        QUAD(0x000000000012D001);
        QUAD(0x000000000012E001);
        QUAD(0x000000000012F001);
        QUAD(0x0000000000130001);
        QUAD(0x0000000000131001);
        QUAD(0x0000000000132001);
        QUAD(0x0000000000133001);
        QUAD(0x0000000000134001);
        QUAD(0x0000000000135001);
        QUAD(0x0000000000136001);
        QUAD(0x0000000000137001);
        QUAD(0x0000000000138001);
        QUAD(0x0000000000139001);
        QUAD(0x000000000013A001);
        QUAD(0x000000000013B001);
        QUAD(0x000000000013C001);
        QUAD(0x000000000013D001);
        QUAD(0x000000000013E001);
        QUAD(0x000000000013F001);
        QUAD(0x0000000000140001);
        QUAD(0x0000000000141001);
        QUAD(0x0000000000142001);
        QUAD(0x0000000000143001);
        QUAD(0x0000000000144001);
        QUAD(0x0000000000145001);
        QUAD(0x0000000000146001);
        QUAD(0x0000000000147001);
        QUAD(0x0000000000148001);
        QUAD(0x0000000000149001);
        QUAD(0x000000000014A001);
        QUAD(0x000000000014B001);
        QUAD(0x000000000014C001);
        QUAD(0x000000000014D001);
        QUAD(0x000000000014E001);
        QUAD(0x000000000014F001);
        QUAD(0x0000000000150001);
        QUAD(0x0000000000151001);
        QUAD(0x0000000000152001);
        QUAD(0x0000000000153001);
        QUAD(0x0000000000154001);
        QUAD(0x0000000000155001);
        QUAD(0x0000000000156001);
        QUAD(0x0000000000157001);
        QUAD(0x0000000000158001);
        QUAD(0x0000000000159001);
        QUAD(0x000000000015A001);
        QUAD(0x000000000015B001);
        QUAD(0x000000000015C001);
        QUAD(0x000000000015D001);
        QUAD(0x000000000015E001);
        QUAD(0x000000000015F001);
        QUAD(0x0000000000160001);
        QUAD(0x0000000000161001);
        QUAD(0x0000000000162001);
        QUAD(0x0000000000163001);
        QUAD(0x0000000000164001);
        QUAD(0x0000000000165001);
        QUAD(0x0000000000166001);
        QUAD(0x0000000000167001);
        QUAD(0x0000000000168001);
        QUAD(0x0000000000169001);
        QUAD(0x000000000016A001);
        QUAD(0x000000000016B001);
        QUAD(0x000000000016C001);
        QUAD(0x000000000016D001);
        QUAD(0x000000000016E001);
        QUAD(0x000000000016F001);
        QUAD(0x0000000000170001);
        QUAD(0x0000000000171001);
        QUAD(0x0000000000172001);
        QUAD(0x0000000000173001);
        QUAD(0x0000000000174001);
        QUAD(0x0000000000175001);
        QUAD(0x0000000000176001);
        QUAD(0x0000000000177001);
        QUAD(0x0000000000178001);
        QUAD(0x0000000000179001);
        QUAD(0x000000000017A001);
        QUAD(0x000000000017B001);
        QUAD(0x000000000017C001);
        QUAD(0x000000000017D001);
        QUAD(0x000000000017E001);
        QUAD(0x000000000017F001);
        QUAD(0x0000000000180001);
        QUAD(0x0000000000181001);
        QUAD(0x0000000000182001);
        QUAD(0x0000000000183001);
        QUAD(0x0000000000184001);
        QUAD(0x0000000000185001);
        QUAD(0x0000000000186001);
        QUAD(0x0000000000187001);
        QUAD(0x0000000000188001);
        QUAD(0x0000000000189001);
        QUAD(0x000000000018A001);
        QUAD(0x000000000018B001);
        QUAD(0x000000000018C001);
        QUAD(0x000000000018D001);
        QUAD(0x000000000018E001);
        QUAD(0x000000000018F001);
        QUAD(0x0000000000190001);
        QUAD(0x0000000000191001);
        QUAD(0x0000000000192001);
        QUAD(0x0000000000193001);
        QUAD(0x0000000000194001);
        QUAD(0x0000000000195001);
        QUAD(0x0000000000196001);
        QUAD(0x0000000000197001);
        QUAD(0x0000000000198001);
        QUAD(0x0000000000199001);
        QUAD(0x000000000019A001);
        QUAD(0x000000000019B001);
        QUAD(0x000000000019C001);
        QUAD(0x000000000019D001);
        QUAD(0x000000000019E001);
        QUAD(0x000000000019F001);
        QUAD(0x00000000001A0001);
        QUAD(0x00000000001A1001);
        QUAD(0x00000000001A2001);
        QUAD(0x00000000001A3001);
        QUAD(0x00000000001A4001);
        QUAD(0x00000000001A5001);
        QUAD(0x00000000001A6001);
        QUAD(0x00000000001A7001);
        QUAD(0x00000000001A8001);
        QUAD(0x00000000001A9001);
        QUAD(0x00000000001AA001);
        QUAD(0x00000000001AB001);
        QUAD(0x00000000001AC001);
        QUAD(0x00000000001AD001);
        QUAD(0x00000000001AE001);
        QUAD(0x00000000001AF001);
        QUAD(0x00000000001B0001);
        QUAD(0x00000000001B1001);
        QUAD(0x00000000001B2001);
        QUAD(0x00000000001B3001);
        QUAD(0x00000000001B4001);
        QUAD(0x00000000001B5001);
        QUAD(0x00000000001B6001);
        QUAD(0x00000000001B7001);
        QUAD(0x00000000001B8001);
        QUAD(0x00000000001B9001);
        QUAD(0x00000000001BA001);
        QUAD(0x00000000001BB001);
        QUAD(0x00000000001BC001);
        QUAD(0x00000000001BD001);
        QUAD(0x00000000001BE001);
        QUAD(0x00000000001BF001);
        QUAD(0x00000000001C0001);
        QUAD(0x00000000001C1001);
        QUAD(0x00000000001C2001);
        QUAD(0x00000000001C3001);
        QUAD(0x00000000001C4001);
        QUAD(0x00000000001C5001);
        QUAD(0x00000000001C6001);
        QUAD(0x00000000001C7001);
        QUAD(0x00000000001C8001);
        QUAD(0x00000000001C9001);
        QUAD(0x00000000001CA001);
        QUAD(0x00000000001CB001);
        QUAD(0x00000000001CC001);
        QUAD(0x00000000001CD001);
        QUAD(0x00000000001CE001);
        QUAD(0x00000000001CF001);
        QUAD(0x00000000001D0001);
        QUAD(0x00000000001D1001);
        QUAD(0x00000000001D2001);
        QUAD(0x00000000001D3001);
        QUAD(0x00000000001D4001);
        QUAD(0x00000000001D5001);
        QUAD(0x00000000001D6001);
        QUAD(0x00000000001D7001);
        QUAD(0x00000000001D8001);
        QUAD(0x00000000001D9001);
        QUAD(0x00000000001DA001);
        QUAD(0x00000000001DB001);
        QUAD(0x00000000001DC001);
        QUAD(0x00000000001DD001);
        QUAD(0x00000000001DE001);
        QUAD(0x00000000001DF001);
        QUAD(0x00000000001E0001);
        QUAD(0x00000000001E1001);
        QUAD(0x00000000001E2001);
        QUAD(0x00000000001E3001);
        QUAD(0x00000000001E4001);
        QUAD(0x00000000001E5001);
        QUAD(0x00000000001E6001);
        QUAD(0x00000000001E7001);
        QUAD(0x00000000001E8001);
        QUAD(0x00000000001E9001);
        QUAD(0x00000000001EA001);
        QUAD(0x00000000001EB001);
        QUAD(0x00000000001EC001);
        QUAD(0x00000000001ED001);
        QUAD(0x00000000001EE001);
        QUAD(0x00000000001EF001);   /* Guard page */
        QUAD(0x00000000001F0003);   /* Kernel stack */
        QUAD(0x00000000001F1003);   /* Kernel stack */
        QUAD(0x00000000001F2003);   /* Kernel stack */
        QUAD(0x00000000001F3003);   /* Kernel stack */
        QUAD(0x00000000001F4003);   /* Kernel stack */
        QUAD(0x00000000001F5003);   /* Kernel stack */
        QUAD(0x00000000001F6003);   /* Kernel stack */
        QUAD(0x00000000001F7003);   /* Kernel stack */
        QUAD(0x00000000001F8003);   /* Kernel stack */
        QUAD(0x00000000001F9003);   /* Kernel stack */
        QUAD(0x00000000001FA003);   /* Kernel stack */
        QUAD(0x00000000001FB003);   /* Kernel stack */
        QUAD(0x00000000001FC003);   /* Kernel stack */
        QUAD(0x00000000001FD001);   /* Guard page - read only, holds kargs*/
        QUAD(0x00000000001FE003);   /* Kernel TLS */
        QUAD(0x00000000001FF001);   /* Guard page */
        . = ALIGN(4096);
    }

    /* We'll switch to a 3K stack from 0xF000 - 0xFC00. */
    _stack_bottom = 0xF000;
    _stack_top    = 0xFC00;

    /* Make sure we didn't crash into the stack. */
    ASSERT(. <= _stack_bottom, "image crashed into the low stack address")

    /* Compute the number of sectors the MBR loader needs to read. */
    _extra_sectors = (. - 0x7e00) / 512;

    /* This is where we are going to load the kernel. */
    _kernel_base = 0x00200000;
    _kernel_entry = _kernel_base + 0x10;
    _kernel_stack = 0x001FD000;
    _kernel_params = _kernel_stack;
    _kernel_tls_page = 0x001FE000;
    _kernel_tls = _kernel_tls_page + 0x800;
}
